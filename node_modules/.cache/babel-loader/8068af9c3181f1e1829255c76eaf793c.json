{"ast":null,"code":"import _slicedToArray from \"/Volumes/external/projects/nasa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Volumes/external/projects/nasa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/external/projects/nasa/src/images.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\nmin-height: 50px;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\nwidth: 45%;\\nmargin: 10px;\\ncolor: red;\\nbackgrond-color: black;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\ntext-decoration: none;\\nmargin: 10px;\\npadding: 25px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    height: 400px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ndisplay: flex;\\nwidth: 80% !important;\\nlist-style-type: none;\\nflex-wrap: wrap;\\njustify-content: center;\\nmargin: 0 auto;\\nmargin-top: 50px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Typography, CardMedia, CardContent, ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport axios from 'axios';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from \"styled-components\";\nimport { data } from './Data';\nconst year = 2018;\nconst months = [...Array(12).keys()];\nconst days = [...Array(10).keys()];\nconst baseUrl = 'https://api.nasa.gov/planetary/apod?api_key=UxG2z5pURfJnH6rE81cKPH9hTcaSjiua0wQFU7tu';\nconst day = 1;\nconsole.log(data);\nconst StyledUl = styled.ul(_templateObject());\nconst StyledCardMedia = styled(CardMedia)(_templateObject2());\nconst StyledLi = styled.li(_templateObject3());\nconst StyledCard = styled(Card)(_templateObject4());\nconst StyledTypographyTitle = styled(Typography)(_templateObject5());\nexport default function Images() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        urls = _useState2[0],\n        setUrls = _useState2[1];\n\n  useEffect(() => {\n    setUrls(data); //     days.map(day => {\n    //     const fetchData = async (day) => {\n    //         const res = await fetch(`${baseUrl}&date=2018-12-${day}`);\n    //         const json = await res.json()\n    //         setUrls([...urls, json])\n    //     }\n    //     fetchData()    \n    // })\n  }, []); // const fetchData = async (day) => {\n  //     const res = await fetch(`${baseUrl}&date=2018-12-${day}`);\n  //     const json = await res.json()\n  //     setUrls([...urls, json])\n  // }\n\n  const displayImages = () => {\n    return urls.map(url => React.createElement(StyledCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, url.media_type === \"image\" ? React.createElement(StyledCardMedia, {\n      component: \"img\",\n      alt: url.title,\n      image: url.url,\n      title: url.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : React.createElement(CardMedia, {\n      component: \"video\",\n      alt: url.title,\n      image: url.url,\n      title: url.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(StyledTypographyTitle, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, url.title), React.createElement(ExpansionPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Details \")), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\"))), React.createElement(Typography, {\n      variant: \"body2\",\n      align: \"left\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, url.explanation))));\n  };\n\n  return React.createElement(StyledUl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, console.log(urls), displayImages());\n}","map":{"version":3,"sources":["/Volumes/external/projects/nasa/src/images.js"],"names":["React","useState","useEffect","Card","Typography","CardMedia","CardContent","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","axios","ExpandMoreIcon","styled","data","year","months","Array","keys","days","baseUrl","day","console","log","StyledUl","ul","StyledCardMedia","StyledLi","li","StyledCard","StyledTypographyTitle","Images","urls","setUrls","displayImages","map","url","media_type","title","explanation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card,\n     Typography, \n    CardMedia,\n     CardContent,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary\n    } from '@material-ui/core';\nimport axios from 'axios';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from \"styled-components\";\n\nimport {data} from './Data'\n\nconst year = 2018\nconst months = [...Array(12).keys()]\nconst days = [...Array(10).keys()]\nconst baseUrl = 'https://api.nasa.gov/planetary/apod?api_key=UxG2z5pURfJnH6rE81cKPH9hTcaSjiua0wQFU7tu'\nconst day = 1;\n\nconsole.log(data)\n\nconst StyledUl = styled.ul`\ndisplay: flex;\nwidth: 80% !important;\nlist-style-type: none;\nflex-wrap: wrap;\njustify-content: center;\nmargin: 0 auto;\nmargin-top: 50px;\n`;\n\nconst StyledCardMedia = styled(CardMedia)`\n    height: 400px;\n`\n\nconst StyledLi = styled.li`\ntext-decoration: none;\nmargin: 10px;\npadding: 25px;\n`\nconst StyledCard = styled(Card)`\nwidth: 45%;\nmargin: 10px;\ncolor: red;\nbackgrond-color: black;\n`;\n\nconst StyledTypographyTitle = styled(Typography)`\nmin-height: 50px;\n`\n\nexport default function Images() {\n    const [urls, setUrls] = useState([]);\n\n    useEffect(() => {\n        setUrls(data);\n    //     days.map(day => {\n    //     const fetchData = async (day) => {\n    //         const res = await fetch(`${baseUrl}&date=2018-12-${day}`);\n    //         const json = await res.json()\n    //         setUrls([...urls, json])\n    //     }\n    //     fetchData()    \n    // })\n    }, []);\n\n    \n\n    // const fetchData = async (day) => {\n    //     const res = await fetch(`${baseUrl}&date=2018-12-${day}`);\n    //     const json = await res.json()\n    //     setUrls([...urls, json])\n    // }\n\n\n    const displayImages = () => {\n\n        return (\n            \n            urls.map(url => (\n                <StyledCard>\n                    { url.media_type === \"image\" ? (\n                    <StyledCardMedia\n                        component=\"img\"\n                        alt={url.title}\n                        image={url.url}\n                        title={url.title}\n                    />) : \n                    \n                    <CardMedia\n                    component=\"video\"\n                    alt={url.title}\n                    image={url.url}\n                    title={url.title}\n                />\n\n                }\n                    <CardContent>\n                        <StyledTypographyTitle gutterBottom variant=\"h5\" component=\"h2\">\n                            {url.title}\n                        </StyledTypographyTitle>\n\n<ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Details </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n\n\n\n                        <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                            {url.explanation}\n                        </Typography>\n                    </CardContent>\n                </StyledCard>)\n            )\n        )\n    }\n\n    return (\n        <StyledUl>\n            {console.log(urls)}\n            {displayImages()}\n        </StyledUl>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}